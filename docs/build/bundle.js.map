{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores/core.ts","../../src/components/organisms/Banner.svelte","../../src/stores/core.gql.ts","../../src/components/atoms/Button.svelte","../../src/components/organisms/Schedule.svelte","../../src/pages/Staff.svelte","../../src/components/molecules/Player.svelte","../../src/pages/Players.svelte","../../src/pages/Countries.svelte","../../src/components/molecules/QualifierLobby.svelte","../../src/components/molecules/Map.svelte","../../src/stores/qualifierLobbies.ts","../../src/pages/QualifierLobbies.svelte","../../src/stores/qualifierLobbies.gql.ts","../../src/components/molecules/QualifierScore.svelte","../../src/stores/qualifierScores.ts","../../src/stores/qualifierScores.gql.ts","../../src/pages/QualifierMaps.svelte","../../src/components/molecules/QualifierPlayer.svelte","../../src/pages/QualifierPlayers.svelte","../../src/pages/EliteQualifierMaps.svelte","../../src/pages/EliteQualifierPlayers.svelte","../../src/pages/ScuffedDrawing.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.35.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\r\nimport query from './core.gql';\r\nconst { API_URL } = __myapp.env;\r\nexport const me = writable(null);\r\nexport const players = writable(null);\r\nexport const referees = writable([]);\r\nexport const commentators = writable([]);\r\nexport const streamers = writable([]);\r\nexport const stages = writable([]);\r\nexport const page = writable(null);\r\nexport const pages = new Set([\r\n    'players',\r\n    'countries',\r\n    'qualifiers',\r\n    'qualifiers!maps',\r\n    'qualifiers!elite',\r\n    'qualifiers!elite!maps',\r\n    'qualifiers!lobbies',\r\n    'scuffed!drawing',\r\n]);\r\nconst onHashChange = () => {\r\n    const { hash } = location;\r\n    const [, query] = hash.split('/');\r\n    if (pages.has(query)) {\r\n        page.set(query);\r\n    }\r\n    else {\r\n        page.set('home');\r\n        if (hash != '#/') {\r\n            location.hash = '#/';\r\n        }\r\n    }\r\n};\r\nwindow.addEventListener('hashchange', onHashChange);\r\nonHashChange();\r\nexport const api = (path, options = { headers: {} }) => fetch(`${API_URL}${path}`, Object.assign(Object.assign({}, options), { headers: Object.assign({ Authorization: access_token ? `Bearer ${access_token}` : undefined }, options.headers) })).then(res => res.json());\r\nlet access_token;\r\n(async () => {\r\n    const { data } = await api('/graphql', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ query })\r\n    });\r\n    stages.set(data.stages);\r\n    players.set(data.players);\r\n    const playersMap = new Map(data.players.map(player => [player.id, player]));\r\n    referees.set(data.referees);\r\n    const refereesMap = new Map(data.referees.map(ref => [ref.id, ref]));\r\n    commentators.set(data.commentators);\r\n    const commentatorsMap = new Map(data.commentators.map(commentator => [commentator.id, commentator]));\r\n    streamers.set(data.streamers);\r\n    const streamersMap = new Map(data.streamers.map(streamer => [streamer.id, streamer]));\r\n    const res = await fetch(`${API_URL}/auth/refresh`, {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    });\r\n    if (res.status == 200) {\r\n        const json = await res.json();\r\n        access_token = json.data.access_token;\r\n        const { data: { first_name, email, avatar } } = await api('/users/me?fields=first_name,email');\r\n        let shouldChangeTimezone = false;\r\n        const timezone = -new Date().getTimezoneOffset() / 60;\r\n        const mePlayer = playersMap.get(email);\r\n        if (mePlayer) {\r\n            shouldChangeTimezone = !mePlayer.timezone || !mePlayer.timezone.endsWith(String(timezone));\r\n        }\r\n        const meReferee = refereesMap.get(email);\r\n        if (meReferee && !shouldChangeTimezone) {\r\n            shouldChangeTimezone = !meReferee.timezone || !meReferee.timezone.endsWith(String(timezone));\r\n        }\r\n        const meCommentator = commentatorsMap.get(email);\r\n        if (meCommentator && !shouldChangeTimezone) {\r\n            shouldChangeTimezone = !meCommentator.timezone || !meCommentator.timezone.endsWith(String(timezone));\r\n        }\r\n        const meStreamer = streamersMap.get(email);\r\n        if (meStreamer && !shouldChangeTimezone) {\r\n            shouldChangeTimezone = !meStreamer.timezone || !meStreamer.timezone.endsWith(String(timezone));\r\n        }\r\n        me.set({\r\n            avatar,\r\n            username: first_name,\r\n            id: email,\r\n            player: mePlayer,\r\n            referee: meReferee,\r\n            commentator: meCommentator,\r\n            streamer: meStreamer,\r\n            qualifier: mePlayer === null || mePlayer === void 0 ? void 0 : mePlayer.qualifier\r\n        });\r\n        if (shouldChangeTimezone) {\r\n            await api('/custom/profile/timezone', {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ offset: new Date().getTimezoneOffset() })\r\n            });\r\n        }\r\n    }\r\n})();\r\n","<script lang=\"ts\">\r\n  import { me, referees } from '../../stores/core';\r\n\r\n  const logout = async () => {\r\n    await fetch(`${__myapp.env.API_URL}/auth/logout`, { method: 'POST', credentials: 'include' });\r\n    location.reload();\r\n  };\r\n  const loginUrl = `${__myapp.env.API_URL}/auth/oauth/osu?redirect=${__myapp.env.UI_URL}`;\r\n</script>\r\n\r\n<div class=\"banner\">\r\n  <a href=\"#/\">\r\n    <div class=\"logo\">\r\n      <img alt=\"\" src=\"/images/logo.png\" />\r\n    </div>\r\n    <h1>\r\n      <img alt=\"Mania Beginner's Showdown\" src=\"/images/title.png\" />\r\n      <div class=\"three\"><span>3</span></div>\r\n    </h1>\r\n  </a>\r\n  <div class=\"hosts\">\r\n    <div class=\"host-title\">Hosted by</div>\r\n    Paturages & Davvy\r\n  </div>\r\n  <div class=\"me\">\r\n    {#if $me}\r\n      Logged in as\r\n      <b>{$me.username}</b> -\r\n      {#if $me.player}\r\n        Player -\r\n      {/if}\r\n      {#if $me.referee}\r\n        Referee -\r\n      {/if}\r\n      {#if $me.commentator}\r\n        Commentator -\r\n      {/if}\r\n      {#if $me.streamer}\r\n        Streamer -\r\n      {/if}\r\n      <a href=\"#/\" on:click={logout}>Log out</a>\r\n    {:else if $referees.length}\r\n      <a href={loginUrl}>Login</a>\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .banner {\r\n    position: relative;\r\n  }\r\n  .hosts {\r\n    color: #f97956;\r\n    text-align: center;\r\n    margin-top: 1.5em;\r\n    font-size: 1.5em;\r\n  }\r\n  .host-title {\r\n    font-size: 1.5em;\r\n    font-family: \"Winter\";\r\n    text-shadow:\r\n      1px 1px #fff,\r\n      -1px 1px #fff,\r\n      1px -1px #fff,\r\n      -1px -1px #fff,\r\n      1px 1px 5px #f97956;\r\n  }\r\n\r\n  .logo {\r\n    position: relative;\r\n    z-index: 1;\r\n    margin: 1em 0 -3em 0;\r\n    text-align: center;\r\n  }\r\n  .logo img {\r\n    width: 15em;\r\n  }\r\n\r\n\th1 {\r\n    position: relative;\r\n\t\tbackground: #ffaa7e;\r\n    border-top: 2px solid #eee;\r\n    border-bottom: 2px solid #eee;\r\n\t\ttext-align: center;\r\n    padding: .5em;\r\n\t}\r\n\r\n\th1 img {\r\n\t\twidth: 500px;\r\n\t}\r\n\r\n  .three {\r\n    position: absolute;\r\n    top: 1.25em;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    font-family: \"Winter\";\r\n    font-size: 1.75em;\r\n    color: #f97956;\r\n    background: #ffaa7e;\r\n    border-radius: 50%;\r\n    width: 1em;\r\n    height: 1em;\r\n    border-bottom: 2px solid #eee;\r\n    text-shadow:\r\n      1px 1px #fff,\r\n      -1px 1px #fff,\r\n      1px -1px #fff,\r\n      -1px -1px #fff,\r\n      1px 1px 5px #f97956;\r\n  }\r\n\r\n  .three span {\r\n    position: relative;\r\n    top: -.1em;\r\n  }\r\n\r\n  .me {\r\n    position: absolute;\r\n    right: 1em;\r\n    bottom: 4em;\r\n  }\r\n</style>","export default `{\r\n  stages(sort: \"sort\") {\r\n    slug\r\n    name\r\n    date_start\r\n    date_end\r\n    link\r\n  }\r\n  players(sort: \"ranking\", limit: -1) {\r\n    id\r\n    username\r\n    discord\r\n    country\r\n    country_code\r\n    avatar\r\n    timezone\r\n    ranking\r\n    pp\r\n    qualifier {\r\n      name\r\n      link\r\n      time\r\n    }\r\n  }\r\n  referees {\r\n    id\r\n    username\r\n    discord\r\n    country\r\n    country_code\r\n    avatar\r\n    timezone\r\n  }\r\n  commentators {\r\n    id\r\n    username\r\n    discord\r\n    country\r\n    country_code\r\n    avatar\r\n    timezone\r\n  }\r\n  streamers {\r\n    id\r\n    username\r\n    discord\r\n    country\r\n    country_code\r\n    avatar\r\n    timezone\r\n  }\r\n}`;\r\n","<script lang=\"ts\">\r\n  export let href: string;\r\n  export let target: string = '';\r\n</script>\r\n\r\n<span class=\"button\">\r\n  <a href={href || 'javascript:void(0)'} {target} rel={target === '_blank' ? 'noopener' : undefined} class=\"link\" on:click>\r\n    <div class=\"text\">\r\n      <slot />\r\n    </div>\r\n  </a>\r\n</span>\r\n\r\n<style>\r\n  .link {\r\n    white-space: nowrap;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-width: 6em;\r\n    height: 2.5em;\r\n    padding: 1em 2em;\r\n    margin: 0 3.7em;\r\n    background: center/contain url('/images/button-background-center.png');\r\n    font-family: \"Winter\";\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    color: #f97956;\r\n  }\r\n  .link::before {\r\n    z-index: 0;\r\n    content: '';\r\n    position: absolute;\r\n    left: -3.5em;\r\n    top: 0;\r\n    height: 4.5em;\r\n    min-width: 6em;\r\n    background: no-repeat left/contain url('/images/button-background-left.png');\r\n  }\r\n  .link::after {\r\n    z-index: 0;\r\n    content: '';\r\n    position: absolute;\r\n    right: -3.5em;\r\n    top: 0;\r\n    height: 4.5em;\r\n    min-width: 6em;\r\n    background: no-repeat right/contain url('/images/button-background-right.png');\r\n  }\r\n  .link:hover {\r\n    position: relative;\r\n    top: 1px;\r\n    left: 1px;\r\n  }\r\n  .text {\r\n    z-index: 1;\r\n    font-size: 3em;\r\n    text-shadow:\r\n      .02em .02em #fff,\r\n      -.02em .02em #fff,\r\n      .02em -.02em #fff,\r\n      -.02em -.02em #fff,\r\n      .02em .02em .1em #f97956;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import type { Stage } from \"../../stores\";\r\n\r\n  export let stages: Stage[] = [];\r\n  const now = new Date().toISOString();\r\n  const displayDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toUTCString().replace(' 00:00:00 GMT', '');\r\n  }\r\n</script>\r\n\r\n<div class=\"schedule\">\r\n  {#each stages as stage, i (stage.slug)}\r\n    <div class=\"stage\" class:active={!i || stages[i-1].date_end < now}>\r\n      <div class=\"stage-name\">\r\n        {#if stage.link}\r\n          <a href={stage.link}>{stage.name}</a>\r\n        {:else}\r\n          {stage.name}\r\n        {/if}\r\n      </div>\r\n      <div class=\"stage-date\">\r\n        {displayDate(stage.date_start)}\r\n      </div>\r\n      <div class=\"stage-date\">\r\n        {displayDate(stage.date_end)}\r\n      </div>\r\n    </div>\r\n  {:else}\r\n    Loading...\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .schedule {\r\n    display: flex;\r\n    overflow-x: scroll;\r\n    padding-bottom: 1em;\r\n  }\r\n  .stage {\r\n    opacity: .5;\r\n    text-align: center;\r\n    margin: 0 .5em;\r\n    width: 7.5em;\r\n    flex-shrink: 0;\r\n  }\r\n  .stage.active {\r\n    opacity: 1;\r\n  }\r\n  .stage-name {\r\n    font-size: 1.25em;\r\n    margin-bottom: .25em;\r\n  }\r\n  .stage-date {\r\n    font-size: .8em;\r\n  }\r\n</style>","<script>\r\n  import { commentators, streamers, referees } from '../stores/core';\r\n  import Button from '../components/atoms/Button.svelte';\r\n</script>\r\n\r\n<div class=\"section\">\r\n  <Button>Hosts</Button>\r\n  <div class=\"container\">\r\n    <a href=\"https://osu.ppy.sh/users/1375479\" target=\"_blank\" rel=\"noopener\">Paturages</a>&emsp;\r\n    <a href=\"https://osu.ppy.sh/users/10047413\" target=\"_blank\" rel=\"noopener\">Davvy</a>\r\n  </div>\r\n</div>\r\n<div class=\"section\">\r\n  <Button>Graphic Designer</Button>\r\n  <div class=\"container\">\r\n    <a href=\"https://osu.ppy.sh/users/9148286\" target=\"_blank\" rel=\"noopener\">E-M-i</a>\r\n  </div>\r\n</div>\r\n<div class=\"section\">\r\n  <Button>Mappool selectors</Button>\r\n  <div class=\"container\">\r\n    <a href=\"https://osu.ppy.sh/users/1375479\" target=\"_blank\" rel=\"noopener\">Paturages</a>&emsp;\r\n    <a href=\"https://osu.ppy.sh/users/10047413\" target=\"_blank\" rel=\"noopener\">Davvy</a>&emsp;\r\n    <a href=\"https://osu.ppy.sh/users/11253722\" target=\"_blank\" rel=\"noopener\">DannyPX</a>&emsp;\r\n    <a href=\"https://osu.ppy.sh/users/11626065\" target=\"_blank\" rel=\"noopener\">guden</a>&emsp;\r\n    <a href=\"https://osu.ppy.sh/users/2124783\" target=\"_blank\" rel=\"noopener\">Kamikaze</a>&emsp;\r\n    <a href=\"https://osu.ppy.sh/users/8976576\" target=\"_blank\" rel=\"noopener\">-mint-</a>&emsp;\r\n    <a href=\"https://osu.ppy.sh/users/8642224\" target=\"_blank\" rel=\"noopener\">Konohana Lucia</a>\r\n  </div>\r\n</div>\r\n<div class=\"section\">\r\n  <Button>Donators</Button>\r\n  <div class=\"container\">\r\n    <a href=\"https://osu.ppy.sh/users/8642224\" target=\"_blank\" rel=\"noopener\">Konohana Lucia</a>&emsp;\r\n    <a href=\"https://osu.ppy.sh/users/8184715\" target=\"_blank\" rel=\"noopener\">Syako</a>\r\n  </div>\r\n</div>\r\n<div class=\"section\">\r\n  <Button>Referees</Button>\r\n  <div class=\"container\">\r\n  {#each $referees as ref, i}\r\n    <a href={`https://osu.ppy.sh/users/${ref.id}`} target=\"_blank\" rel=\"noopener\">{ref.username}</a>&emsp;\r\n  {/each}\r\n</div>\r\n</div>\r\n<div class=\"section\">\r\n  <Button>Streamers</Button>\r\n  <div class=\"container\">\r\n  {#each $streamers as streamer, i}\r\n    <a href={`https://osu.ppy.sh/users/${streamer.id}`} target=\"_blank\" rel=\"noopener\">{streamer.username}</a>&emsp;\r\n  {/each}\r\n</div>\r\n</div>\r\n<div class=\"section\">\r\n  <Button>Commentators</Button>\r\n  <div class=\"container\">\r\n  {#each $commentators as commentator, i}\r\n    <a href={`https://osu.ppy.sh/users/${commentator.id}`} target=\"_blank\" rel=\"noopener\">{commentator.username}</a>&emsp;\r\n  {/each}\r\n</div>\r\n</div>\r\n\r\n<style>\r\n  .section {\r\n    text-align: center;\r\n    margin: 1em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .section :global(.link:hover) {\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n  a {\r\n    margin-right: .5em;\r\n  }\r\n  .container {\r\n    margin: 0.5em;\r\n    font-size: 1.25em;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import type { Player } from '../../types';\r\n  export let player: Player;\r\n</script>\r\n\r\n<a class=\"player\" href={`https://osu.ppy.sh/users/${player.id}`} target=\"_blank\" rel=\"noopener\">\r\n  <div class=\"avatar\">\r\n    <img class=\"avatar\" src={player.avatar} alt=\"\" />\r\n  </div>\r\n  <div class=\"name\">\r\n    {player.username}\r\n    <div class=\"country\">{player.country}</div>\r\n  </div>\r\n  <div class=\"ranking\">\r\n    {player.ranking}\r\n    <div class=\"pp\">({Number(player.pp).toFixed(2)} pp)</div>\r\n  </div>\r\n</a>\r\n\r\n<style>\r\n  .player {\r\n    display: flex;\r\n    align-items: center;\r\n    background: #ffd08180;\r\n    width: 40em;\r\n    padding: 0 4em;\r\n    border-radius: 1em;\r\n    text-decoration: none;\r\n    box-shadow: 0 0 2px #ffd081;\r\n  }\r\n  .player:nth-child(2n) {\r\n    background: #ffd081c0;\r\n  }\r\n  .avatar {\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n  }\r\n  .avatar img {\r\n    height: 3em;\r\n  }\r\n  .name {\r\n    text-align: center;\r\n    font-size: 1.5em;\r\n    margin: 0 1em;\r\n    flex: 1;\r\n  }\r\n  .country {\r\n    font-size: .5em;\r\n  }\r\n  .ranking {\r\n    font-size: 1.5em;\r\n    margin: 0 1em;\r\n    text-align: right;\r\n  }\r\n  .pp {\r\n    font-size: .5em;\r\n  }\r\n</style>","<script>\r\n  import Button from '../components/atoms/Button.svelte';\r\n  import Player from '../components/molecules/Player.svelte';\r\n  import { me, players, api } from '../stores/core';\r\n\r\n  let registering = false;\r\n  const register = async () => {\r\n    registering = true;\r\n    const timezone = -new Date().getTimezoneOffset() / 60;\r\n    const res = await api('/items/players', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        id: $me.id,\r\n        timezone: `UTC${timezone > 0 ? '+' : ''}${timezone}`\r\n      })\r\n    });\r\n    if (res.errors) {\r\n      alert(res.errors[0].message);\r\n    } else {\r\n      me.set({ ...$me, player: res.data });\r\n      players.set($players.concat([res.data]).sort((a, b) => b.ranking - a.ranking));\r\n    }\r\n    registering = false;\r\n  };\r\n</script>\r\n\r\n\r\n{#if !$me}\r\n  <p class=\"register\">\r\n    <Button href={`${__myapp.env.API_URL}/auth/oauth/osu?redirect=${__myapp.env.UI_URL}`}>\r\n      Register\r\n    </Button>\r\n  </p>\r\n<!-- {:else if !$me.player}\r\n  <p class=\"confirm\">\r\n    {#if registering}Registering...{:else}\r\n    <Button on:click={register} href=\"javascript:void(0)\">\r\n      Confirm registration\r\n    </Button>\r\n    {/if}\r\n    Don't forget to\r\n    <a href=\"https://discord.gg/uNSqksR\" target=\"_blank\" rel=\"noopener\">join the Discord server</a>\r\n    (this is also required!)\r\n  </p> -->\r\n{/if}\r\n\r\n<p class=\"players\">\r\n{#if !$players}\r\n  Loading players...\r\n{:else}\r\n  <div class=\"stats\">Total players: {$players.length}</div>\r\n  {#each $players as player (player.id)}\r\n    <Player {player} />\r\n  {:else}\r\n    No players registered yet!\r\n  {/each}\r\n{/if}\r\n</p>\r\n\r\n<style>\r\n  p {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .confirm :global(.button) :global(.text) {\r\n    font-size: 2em;\r\n  }\r\n  .players :global(.player) {\r\n    margin: .25em 0;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import type { Player as IPlayer } from '../types';\r\n  import Player from '../components/molecules/Player.svelte';\r\n  import { players } from '../stores/core';\r\n\r\n  $: countries = Object.values(\r\n    ($players?.reduce((obj, player) => {\r\n      if (!obj[player.country]) obj[player.country] = { country: player.country, players: [] };\r\n      obj[player.country].players.push(player);\r\n      return obj;\r\n    }, {}) || {}) as Record<string, { country: string, players: IPlayer[] }>\r\n  ).sort((a, b) => a.players.length < b.players.length ? 1 : -1);\r\n\r\n  let selectedCountry: string;\r\n  const selectCountry = (country: string) => (selectedCountry = selectedCountry == country ? null : country);\r\n</script>\r\n\r\n<div class=\"countries\">\r\n  {#each countries as { players, country } (country)}\r\n    <div class=\"country\" on:click={() => selectCountry(country)}>\r\n      <div class=\"label\">\r\n        {country}: {players.length} player{players.length == 1 ? '' : 's'}\r\n      </div>\r\n      <div class=\"pointer\">{selectedCountry == country ? '▼' : '►'}</div>\r\n    </div>\r\n    {#if selectedCountry == country}\r\n    <div class=\"players\">\r\n      {#each players as player}\r\n        <Player {player} />\r\n      {/each}\r\n    </div>\r\n    {/if}\r\n  {:else}\r\n    Loading...\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .countries {\r\n    text-align: center;\r\n  }\r\n  .country {\r\n    cursor: pointer;\r\n    text-align: left;\r\n    margin: 1em auto;\r\n    width: 40em;\r\n    padding: 1em 4em;\r\n    border-radius: 1em;\r\n    background: #ffd08180;\r\n    box-shadow: 0 0 2px #ffd081;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .country:nth-child(2n) {\r\n    background: #ffd081c0;\r\n  }\r\n  .label {\r\n    flex: 1;\r\n  }\r\n  .players :global(.player) {\r\n    margin: .5em auto;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import type { QualifierLobby } from '../../types';\r\n  import Button from '../atoms/Button.svelte';\r\n  import { me } from '../../stores/core';\r\n  export let lobby: QualifierLobby;\r\n  export let toggleAvailable: () => Promise<any>;\r\n  export let setSchedule: () => Promise<any>;\r\n\r\n  let settingAvailable;\r\n  const handleToggleAvailable = async () => {\r\n    settingAvailable = true;\r\n    await toggleAvailable();\r\n    settingAvailable = false;\r\n  }\r\n\r\n  let settingSchedule;\r\n  const handleSetSchedule = async () => {\r\n    settingSchedule = true;\r\n    await setSchedule();\r\n    settingSchedule = false;\r\n  }\r\n\r\n  $: time = new Date(lobby.time);\r\n  $: isAdded = toggleAvailable && lobby.available_referees.find(({ referee }) => referee.id == $me.id);\r\n</script>\r\n\r\n<div class=\"lobby\">\r\n  <div class=\"name\">\r\n    {#if lobby.link}\r\n      <a href={lobby.link} target=\"_blank\" rel=\"noopener\">\r\n        {lobby.name}\r\n      </a>\r\n    {:else}\r\n      {lobby.name}\r\n      {#if setSchedule}\r\n        {#if settingSchedule}...{:else}\r\n        <Button on:click={handleSetSchedule}>Sign up</Button>\r\n        {/if}\r\n      {/if}\r\n    {/if}\r\n  </div>\r\n  <div class=\"body\">\r\n    <div class=\"utc\">{time.toUTCString().replace(':00 GMT', ' UTC+0')}</div>\r\n    <div class=\"time\">Your local time: <b>{time.toTimeString().replace(':00 GMT', ' UTC')}</b></div>\r\n    <div class=\"referee\">\r\n      <b>Referee</b>:\r\n      {#if lobby.referee}\r\n        <a href={`https://osu.ppy.sh/users/${lobby.referee.id}`}>{lobby.referee.username}</a>\r\n      {:else}\r\n        To be defined\r\n      {/if}\r\n      {#if toggleAvailable}\r\n        <br />\r\n        <b>Available referees</b>:\r\n        {lobby.available_referees.map(({ referee }) => referee.username).join(', ') || 'None'} -\r\n        {#if settingAvailable}\r\n          Processing...\r\n        {:else if isAdded}\r\n          <a href=\"javascript:void(0)\" on:click={handleToggleAvailable}>Remove yourself</a>\r\n        {:else}\r\n          <a href=\"javascript:void(0)\" on:click={handleToggleAvailable}>Add yourself as available</a>\r\n        {/if}\r\n      {/if}\r\n    </div>\r\n    <div class=\"players\">\r\n      {#each [0, 1, 2, 3, 4, 5, 6, 7] as i}\r\n        {#if lobby.players[i]}\r\n          <a href={`https://osu.ppy.sh/users/${lobby.players[i].id}`}>{lobby.players[i].username}</a>\r\n        {:else if !lobby.link}\r\n          <a class=\"free-spot\">Free spot!</a>\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .lobby {\r\n    display: flex;\r\n    align-items: center;\r\n    background: #ffd08180;\r\n    width: 50em;\r\n    padding: .25em 0;\r\n    border-radius: 1em;\r\n    text-decoration: none;\r\n    box-shadow: 0 0 2px #ffd081;\r\n  }\r\n  .lobby:nth-child(2n) {\r\n    background: #ffd081c0;\r\n  }\r\n\r\n  .free-spot {\r\n    opacity: .5;\r\n  }\r\n\r\n  .name {\r\n    text-align: center;\r\n    font-size: 2em;\r\n    width: 4em;\r\n    padding: 0 .5em;\r\n    position: relative;\r\n    flex-shrink: 0;\r\n  }\r\n\r\n  .name :global(.button) {\r\n    font-size: .16em;\r\n    position: absolute;\r\n    bottom: -5em;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .referee {\r\n    margin: .25em 0;\r\n  }\r\n\r\n  .utc {\r\n    opacity: .6;\r\n  }\r\n  .utc, .time {\r\n    font-size: .8em;\r\n  }\r\n\r\n  .players {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n  }\r\n  .players a {\r\n    width: 10em;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import type { Map } from '../../types';\r\n  export let map: Map;\r\n</script>\r\n\r\n<div\r\n  class=\"map\"\r\n  style={`background-image:url(${map.cover})`}\r\n  class:rice={map.category.toLowerCase().match(/rice|tech/)}\r\n  class:ln={map.category.toLowerCase().includes('ln')}\r\n  class:hybrid={map.category.toLowerCase().includes('hybrid')}\r\n  class:tiebreaker={map.category.toLowerCase().includes('tiebreaker')}\r\n>\r\n  <div class=\"container\">\r\n    <div class=\"header\">\r\n      <a class=\"name\" href={`https://osu.ppy.sh/beatmaps/${map.id}`} target=\"_blank\" rel=\"noopener\">\r\n        {map.artist} - {map.name}<br />{map.difficulty}\r\n      </a>\r\n      <div class=\"category\">{map.category}</div>\r\n    </div>\r\n    <div class=\"body\">\r\n      <div class=\"mapper\">\r\n        Mapset by <a href={`https://osu.ppy.sh/users/${map.charter_id}`}>{map.charter}</a>\r\n      </div>\r\n      <div class=\"stats\">\r\n        <span class=\"stat-item\">\r\n          ⭐ {map.sr}\r\n        </span>\r\n        <span class=\"stat-item\">\r\n          ⏰ {map.length}\r\n        </span>\r\n        <span class=\"stat-item\">\r\n          🎵 {map.bpm} BPM\r\n        </span>\r\n        <span class=\"stat-item\">\r\n          🎯 OD {map.od}\r\n        </span>\r\n        <span class=\"stat-item\">\r\n          ❤️ HP {map.hp}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .map {\r\n    width: 50em;\r\n    text-decoration: none;\r\n    box-shadow: 0 0 2px #ffd081;\r\n    border-radius: 5px;\r\n    background-size: cover;\r\n    background-position: center;\r\n    color: #fff;\r\n  }\r\n  .map a {\r\n    color: #fff;\r\n  }\r\n  .container {\r\n    padding: 1em;\r\n    background: #0009;\r\n    border-top-right-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n  }\r\n  .header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  .name {\r\n    margin-bottom: .5em;\r\n  }\r\n  .category {\r\n    font-size: 1.25em;\r\n  }\r\n  .body {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  .stats {\r\n    font-size: .8em;\r\n  }\r\n  .stat-item {\r\n    margin-left: .25em;\r\n  }\r\n\r\n  .rice {\r\n    border-left: 5px solid #2196f3;\r\n  }\r\n  .ln {\r\n    border-left: 5px solid #f44336;\r\n  }\r\n  .hybrid {\r\n    border-left: 5px solid #ffeb3b;\r\n  }\r\n  .tiebreaker {\r\n    border-left: 5px solid #880e4f;\r\n  }\r\n</style>","import { writable } from 'svelte/store';\r\nimport query from './qualifierLobbies.gql';\r\nimport { api } from './core';\r\nexport const qualifierLobbies = writable(null);\r\nexport const qualifierMaps = writable(null);\r\nexport const init = async () => {\r\n    const { data } = await api('/graphql', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ query })\r\n    });\r\n    qualifierLobbies.set(data.qualifier_lobbies);\r\n    qualifierMaps.set(data.maps);\r\n};\r\n","<script lang=\"ts\">\r\n  import type { QualifierLobby as IQualifierLobby } from '../types';\r\n  import QualifierLobby from '../components/molecules/QualifierLobby.svelte';\r\n  import Map from '../components/molecules/Map.svelte';\r\n  import { me, api } from '../stores/core';\r\n  import { qualifierLobbies, qualifierMaps, init } from '../stores/qualifierLobbies';\r\n\r\n  if (!$qualifierLobbies) init();\r\n\r\n  const toggleAvailable = (lobby: IQualifierLobby) => async () => {\r\n    const existingEntry = lobby.available_referees.find(({ referee }) => referee.id == $me.id);\r\n    const res = await api(`/items/qualifier_lobbies/${lobby.name}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        available_referees: existingEntry ? { delete: [existingEntry.rel_id] } : { create: [{ referees_id: $me.id }] }\r\n      })\r\n    });\r\n    if (res.errors) {\r\n      alert(res.errors[0].message);\r\n    } else {\r\n      qualifierLobbies.set($qualifierLobbies.map(l => {\r\n        if (l.name != lobby.name) return l;\r\n        if (existingEntry) {\r\n          l.available_referees = l.available_referees.filter(({ referee }) => referee.id != $me.id);\r\n        } else {\r\n          l.available_referees.push({\r\n            rel_id: res.data.available_referees.pop(),\r\n            referee: $me.referee\r\n          });\r\n        }\r\n        return l;\r\n      }));\r\n    }\r\n  };\r\n\r\n  const setSchedule = (lobby: IQualifierLobby) => async () => {\r\n    const res = await api(`/custom/qualifiers/schedule`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        qualifier: lobby.name\r\n      })\r\n    });\r\n    if (res.errors) alert(res.errors[0].message);\r\n    location.reload();\r\n  };\r\n  \r\n  $: time = new Date($me?.qualifier?.time);\r\n</script>\r\n\r\n<div class=\"links\">\r\n  <a href=\"#/qualifiers!maps\">Rankings per map</a>\r\n  <a href=\"#/qualifiers\">Player ranking</a>\r\n</div>\r\n{#if $me?.player}\r\n<p class=\"intro\">\r\n  {#if $me.qualifier}\r\n    You are in <b>Lobby {$me.qualifier.name}</b> happening on\r\n    <b>{time.toUTCString().replace(':00 GMT', ' UTC+0')}</b><br />\r\n    (converted to your local time: <b>{time.toTimeString().replace(':00 GMT', ' UTC')}</b>).\r\n    <br /><br />\r\n    The referee will ping you on Discord (make sure you are in our Discord) <b>15 minutes</b> before the time<br />\r\n    and will invite you in the multiplayer lobby <b>5 minutes</b> before the time. Make sure you are logged in the game by then!\r\n    <br /><br />\r\n    Once you are in the game, you will play all maps <b>2 times</b>:<br />\r\n    the best score on each map will count in the final qualifiers leaderboard and determine your seed.\r\n    <br /><br />\r\n  {:else}\r\n    Welcome, player {$me.username}!<br /><br />\r\n    You can feel free to put yourself in any qualifier with a free spot in it.<br /><br />\r\n    If there is no lobby that suits you, please specify a time in the #reschedules channel in the Discord:<br />\r\n    we will try to organize a special extra lobby.\r\n  {/if}\r\n</p>\r\n{/if}\r\n{#if !$qualifierLobbies}\r\n  <p class=\"lobbies\">Loading qualifier lobbies...</p>\r\n{:else}\r\n  <p class=\"maps\">\r\n  {#each $qualifierMaps as map (map.id)}\r\n    <Map {map} />\r\n  {/each}\r\n  </p>\r\n  <p class=\"lobbies\">\r\n  {#each $qualifierLobbies as lobby (lobby.name)}\r\n    <QualifierLobby {lobby} toggleAvailable={$me?.referee && toggleAvailable(lobby)} setSchedule={$me?.player && !$me?.qualifier?.link && setSchedule(lobby)} />\r\n  {/each}\r\n  </p>\r\n{/if}\r\n\r\n<style>\r\n  .intro {\r\n    text-align: center;\r\n    padding: 1em;\r\n  }\r\n\r\n  .maps {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1em;\r\n  }\r\n  .maps :global(.map) {\r\n    margin: .25em 0;\r\n  }\r\n\r\n  .lobbies {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .lobbies :global(.lobby) {\r\n    margin: .25em 0;\r\n  }\r\n  .links {\r\n    font-size: 1.25em;\r\n    display: flex;\r\n    width: 20em;\r\n    justify-content: space-between;\r\n    margin: auto;\r\n  }\r\n</style>","export default `{\r\n  maps(\r\n    filter: {\r\n      stage: {\r\n        slug: {\r\n          _eq: \"qualifiers\"\r\n        }\r\n      }\r\n    }\r\n    sort: \"order\"\r\n  ) {\r\n    id\r\n    artist\r\n    name\r\n    difficulty\r\n    charter\r\n    charter_id\r\n    category\r\n    bpm\r\n    length\r\n    od\r\n    hp\r\n    sr\r\n    cover\r\n  }\r\n  qualifier_lobbies(sort: \"time\") {\r\n    name\r\n    link\r\n    players {\r\n      id\r\n      username\r\n    }\r\n    time\r\n    referee {\r\n      id\r\n      username\r\n    }\r\n    available_referees {\r\n      rel_id: id\r\n      referee: referees_id {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n}`;\r\n","<script lang=\"ts\">\r\n  import type { Player, Score } from '../../types';\r\n  import { me } from '../../stores/core';\r\n  export let player: Player;\r\n  export let score: Score;\r\n  \r\n  const totalCount = score.c320 + score.c300 + score.c200 + score.c100 + score.c50 + score.c0;\r\n  const accuracy = (\r\n    (305 * score.c320) +\r\n    (300 * score.c300) +\r\n    (200 * score.c200) +\r\n    (100 * score.c100) +\r\n    (50 * score.c50)\r\n  ) / (3.05 * totalCount);\r\n</script>\r\n\r\n<div class=\"score\" class:me={$me?.id == player.id}>\r\n  <div class=\"position\">{score.position}.</div>\r\n  <div class=\"player\">\r\n    <a href={`https://osu.ppy.sh/users/${player.id}`} target=\"_blank\" rel=\"noopener\">\r\n      {player.username}\r\n    </a>\r\n  </div>\r\n  <div class=\"value\">\r\n    {score.score}\r\n    <div class=\"details\">\r\n      {accuracy.toFixed(2)}%, x{score.combo}\r\n    </div>\r\n  </div>\r\n  <div class=\"judgements\">\r\n    <div class=\"judgement\">\r\n      {score.c320}\r\n    </div>\r\n    <div class=\"judgement\">\r\n      {score.c300}\r\n    </div>\r\n    <div class=\"judgement\">\r\n      {score.c200}\r\n    </div>\r\n    <div class=\"judgement\">\r\n      {score.c100}\r\n    </div>\r\n    <div class=\"judgement\">\r\n      {score.c50}\r\n    </div>\r\n    <div class=\"judgement\">\r\n      {score.c0}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    background: #ffd08180;\r\n    padding: .25em 0;\r\n  }\r\n  .score:nth-child(2n) {\r\n    background: #ffd081c0;\r\n  }\r\n  .score.me {\r\n    background: #f97956;\r\n  }\r\n  .position {\r\n    width: 3em;\r\n    text-align: right;\r\n    margin-right: .5em;\r\n  }\r\n  .player {\r\n    width: 10em;\r\n  }\r\n  .value {\r\n    width: 10em;\r\n  }\r\n  .details {\r\n    font-size: .8em;\r\n  }\r\n  .judgements {\r\n    display: flex;\r\n    font-size: .8em;\r\n  }\r\n  .judgement {\r\n    width: 4.5em;\r\n  }\r\n</style>\r\n","import { writable } from 'svelte/store';\r\nimport query from './qualifierScores.gql';\r\nimport { api } from './core';\r\nexport const regularMapRanking = writable(null);\r\nexport const regularPlayerRanking = writable(null);\r\nexport const eliteMapRanking = writable(null);\r\nexport const elitePlayerRanking = writable(null);\r\nexport const myQualifier = writable(null);\r\nconst elite = new Set([\r\n    '9950122',\r\n    '2735466',\r\n    '18025458',\r\n    '15255368',\r\n    '15286154',\r\n    '13608389',\r\n    '17422924',\r\n    '17957861',\r\n    '9895270',\r\n    '5101133',\r\n    '13455818',\r\n    '19365665',\r\n    '6335238',\r\n    '2383766',\r\n    '13984214',\r\n    '8916149'\r\n]);\r\n// This assumes that the list of players has been fetched from stores/core,\r\n// so players have to be fed in the init.\r\nexport const init = async (rawPlayers) => {\r\n    var _a, _b;\r\n    const regularPlayers = rawPlayers.filter(p => !elite.has(p.id));\r\n    const elitePlayers = rawPlayers.filter(p => elite.has(p.id));\r\n    const { data } = await api('/graphql', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ query })\r\n    });\r\n    // there are at least 3 or 4 different meanings of map here please help\r\n    const initMapPlayers = (map) => [\r\n        map.id,\r\n        Object.assign(Object.assign({}, map), { players: new Map() })\r\n    ];\r\n    const regularMapsMap = new Map(data.maps.map(initMapPlayers));\r\n    const eliteMapsMap = new Map(data.maps.map(initMapPlayers));\r\n    const initPlayerScores = (player) => [\r\n        player.id,\r\n        Object.assign(Object.assign({}, player), { totalScore: 0, \r\n            // Initialize players to bottom ranking\r\n            sumOfPositions: rawPlayers.length * data.maps.length, mapScores: new Map(data.maps.map(map => [\r\n                map.id,\r\n                []\r\n            ])) })\r\n    ];\r\n    const regularPlayersMap = new Map(regularPlayers.map(initPlayerScores));\r\n    const elitePlayersMap = new Map(elitePlayers.map(initPlayerScores));\r\n    // The fetched scores are ordered by descending score,\r\n    // so the map leaderboards should be already sorted upon insertion.\r\n    // Settings Map values should conserve order when doing .entries() or .values()\r\n    data.qualifier_scores.forEach((score) => {\r\n        var _a, _b;\r\n        let player;\r\n        if (player = regularPlayersMap.get((_a = score.player) === null || _a === void 0 ? void 0 : _a.id)) {\r\n            if (!regularMapsMap.has(score.map.id))\r\n                return;\r\n            player.mapScores.get(score.map.id).push(score);\r\n            const mapPlayers = regularMapsMap.get(score.map.id).players;\r\n            if (!mapPlayers.has(score.player.id)) {\r\n                mapPlayers.set(score.player.id, player);\r\n            }\r\n        }\r\n        else if (player = elitePlayersMap.get((_b = score.player) === null || _b === void 0 ? void 0 : _b.id)) {\r\n            if (!eliteMapsMap.has(score.map.id))\r\n                return;\r\n            player.mapScores.get(score.map.id).push(score);\r\n            const mapPlayers = eliteMapsMap.get(score.map.id).players;\r\n            if (!mapPlayers.has(score.player.id)) {\r\n                mapPlayers.set(score.player.id, player);\r\n            }\r\n        }\r\n    });\r\n    // Compute map player positions\r\n    for (const map of regularMapsMap.values()) {\r\n        const mapPlayers = Array.from(map.players.values());\r\n        for (let i = 0; i < mapPlayers.length; ++i) {\r\n            const playerScore = mapPlayers[i].mapScores.get(map.id)[0];\r\n            const previousPlayerScore = (_a = mapPlayers[i - 1]) === null || _a === void 0 ? void 0 : _a.mapScores.get(map.id)[0];\r\n            playerScore.position = playerScore.score == (previousPlayerScore === null || previousPlayerScore === void 0 ? void 0 : previousPlayerScore.score) ? previousPlayerScore.position : i + 1;\r\n        }\r\n    }\r\n    for (const map of eliteMapsMap.values()) {\r\n        const mapPlayers = Array.from(map.players.values());\r\n        for (let i = 0; i < mapPlayers.length; ++i) {\r\n            const playerScore = mapPlayers[i].mapScores.get(map.id)[0];\r\n            const previousPlayerScore = (_b = mapPlayers[i - 1]) === null || _b === void 0 ? void 0 : _b.mapScores.get(map.id)[0];\r\n            playerScore.position = playerScore.score == (previousPlayerScore === null || previousPlayerScore === void 0 ? void 0 : previousPlayerScore.score) ? previousPlayerScore.position : i + 1;\r\n        }\r\n    }\r\n    // Compute player sum of positions and total score\r\n    // and set one's own qualifier\r\n    for (const player of regularPlayersMap.values()) {\r\n        player.sumOfPositions = data.maps.reduce((sum, map) => {\r\n            var _a, _b;\r\n            player.totalScore += (_a = player.mapScores.get(map.id)[0]) === null || _a === void 0 ? void 0 : _a.score;\r\n            return sum + (((_b = player.mapScores.get(map.id)[0]) === null || _b === void 0 ? void 0 : _b.position) || rawPlayers.length);\r\n        }, 0);\r\n    }\r\n    for (const player of elitePlayersMap.values()) {\r\n        player.sumOfPositions = data.maps.reduce((sum, map) => {\r\n            var _a, _b;\r\n            player.totalScore += (_a = player.mapScores.get(map.id)[0]) === null || _a === void 0 ? void 0 : _a.score;\r\n            return sum + (((_b = player.mapScores.get(map.id)[0]) === null || _b === void 0 ? void 0 : _b.position) || rawPlayers.length);\r\n        }, 0);\r\n    }\r\n    const sortPlayers = (a, b) => {\r\n        // Tiebreaker = totalScore\r\n        if (a.sumOfPositions == b.sumOfPositions) {\r\n            return a.totalScore < b.totalScore ? 1 : -1;\r\n        }\r\n        return a.sumOfPositions < b.sumOfPositions ? -1 : 1;\r\n    };\r\n    const regularSortedPlayers = Array.from(regularPlayersMap.values()).sort(sortPlayers);\r\n    const eliteSortedPlayers = Array.from(elitePlayersMap.values()).sort(sortPlayers);\r\n    regularSortedPlayers.forEach((p, i) => p.position = i + 1);\r\n    eliteSortedPlayers.forEach((p, i) => p.position = i + 1);\r\n    regularMapRanking.set(Array.from(regularMapsMap.values()));\r\n    eliteMapRanking.set(Array.from(eliteMapsMap.values()));\r\n    regularPlayerRanking.set(regularSortedPlayers);\r\n    elitePlayerRanking.set(eliteSortedPlayers);\r\n};\r\nexport const initMyQualifier = (playerRanking, me) => {\r\n    const myQualifierIndex = playerRanking.findIndex(player => player.id == (me === null || me === void 0 ? void 0 : me.id));\r\n    if (myQualifierIndex > -1) {\r\n        myQualifier.set(Object.assign(Object.assign({}, playerRanking[myQualifierIndex]), { position: myQualifierIndex + 1 }));\r\n    }\r\n};\r\n","export default `{\r\n  maps(\r\n    filter: {\r\n      stage: {\r\n        slug: {\r\n          _eq: \"qualifiers\"\r\n        }\r\n      }\r\n    }\r\n    sort: \"order\"\r\n  ) {\r\n    id\r\n    artist\r\n    name\r\n    difficulty\r\n    charter\r\n    charter_id\r\n    category\r\n    bpm\r\n    length\r\n    od\r\n    hp\r\n    sr\r\n    cover\r\n  }\r\n  qualifier_scores(sort: \"-score\", limit: -1) {\r\n    player {\r\n      id\r\n    }\r\n    map {\r\n      id\r\n    }\r\n    lobby {\r\n      name\r\n      link\r\n    }\r\n    score\r\n    combo\r\n    c320\r\n    c300\r\n    c200\r\n    c100\r\n    c50\r\n    c0\r\n  }\r\n}`;\r\n","<script lang=\"ts\">\r\n  import Map from '../components/molecules/Map.svelte';\r\n  import QualifierScore from '../components/molecules/QualifierScore.svelte';\r\n  import { me, players } from '../stores/core';\r\n  import {\r\n    regularMapRanking,\r\n    regularPlayerRanking,\r\n    myQualifier,\r\n    init,\r\n    initMyQualifier\r\n  } from '../stores/qualifierScores';\r\n\r\n  let hiddenMaps = {};\r\n  const toggleHidden = map => {\r\n    hiddenMaps = {\r\n      ...hiddenMaps,\r\n      [map.id]: !hiddenMaps[map.id]\r\n    }\r\n  }\r\n\r\n  $: if (!$regularMapRanking && $players) init($players);\r\n  $: if (!$myQualifier && $regularPlayerRanking && $me) initMyQualifier($regularPlayerRanking, $me);\r\n</script>\r\n\r\n<div class=\"links\">\r\n  <a href=\"#/qualifiers\">Player rankings</a>\r\n  <a href=\"#/qualifiers!lobbies\">Qualifier lobbies</a>\r\n  <a href=\"#/qualifiers!elite!maps\">Elite players</a>\r\n</div>\r\n{#if !$regularMapRanking}\r\n  <p class=\"lobbies\">Loading qualifier scores...</p>\r\n{:else}\r\n  <p class=\"maps\">\r\n  {#each $regularMapRanking as map (map.id)}\r\n    <Map {map} />\r\n    {#if $myQualifier}\r\n      <div class=\"my-qualifier\">\r\n        <QualifierScore player={$myQualifier} score={$myQualifier.mapScores.get(map.id)[0]} />\r\n      </div>\r\n    {/if}\r\n    <a href=\"javascript:void(0)\" on:click={() => toggleHidden(map)}>\r\n      {hiddenMaps[map.id] ? 'Show' : 'Hide'} scores\r\n    </a>\r\n    {#if !hiddenMaps[map.id]}\r\n      {#each Array.from(map.players.values()) as player (player.id)}\r\n        <QualifierScore {player} score={player.mapScores.get(map.id)[0]} />\r\n      {/each}\r\n    {/if}\r\n  {/each}\r\n  </p>\r\n{/if}\r\n\r\n<style>\r\n  .maps {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1em;\r\n  }\r\n  .maps :global(.map) {\r\n    margin: 1em 0;\r\n  }\r\n  .links {\r\n    font-size: 1.25em;\r\n    display: flex;\r\n    width: 30em;\r\n    justify-content: space-between;\r\n    margin: auto;\r\n  }\r\n  .my-qualifier {\r\n    font-size: 1.125em;\r\n    margin-bottom: .5em;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import type { Map } from '../../types';\r\n  import type { QualifierPlayer } from '../../stores/qualifierScores';\r\n  export let position: number;\r\n  export let player: QualifierPlayer;\r\n  export let maps: Map[];\r\n</script>\r\n\r\n<a class=\"player\" href={`https://osu.ppy.sh/users/${player.id}`} target=\"_blank\" rel=\"noopener\">\r\n  <div class=\"avatar\">\r\n    <img class=\"avatar\" src={player.avatar} alt=\"\" />\r\n  </div>\r\n  <div class=\"name\">\r\n    {position}. {player.username} (#{player.ranking})\r\n    <div class=\"country\">{player.country}</div>\r\n  </div>\r\n  <div class=\"positions\">\r\n    {maps.map(map => player.mapScores.get(map.id)[0]?.position || 'N/A').join(' + ')}\r\n    =\r\n    <b>{player.sumOfPositions}</b>\r\n    <div class=\"total-score\">\r\n      Total score: {player.totalScore}\r\n    </div>\r\n  </div>\r\n</a>\r\n<div class=\"scores\">\r\n  {#each maps as map (map.id)}\r\n    <div class=\"score\">\r\n      {player.mapScores.get(map.id)[0]?.score || 'N/A'}<br />\r\n      ({player.mapScores.get(map.id)[0]?.position || '-'})\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .player {\r\n    display: flex;\r\n    align-items: center;\r\n    background: #ffd08180;\r\n    width: 50em;\r\n    padding: 0 1em;\r\n    border-radius: 1em;\r\n    text-decoration: none;\r\n    box-shadow: 0 0 2px #ffd081;\r\n  }\r\n  .avatar {\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n  }\r\n  .avatar img {\r\n    height: 3em;\r\n  }\r\n  .name {\r\n    font-size: 1.5em;\r\n    margin: 0 1em;\r\n    flex: 1;\r\n  }\r\n  .country {\r\n    font-size: .5em;\r\n  }\r\n  .positions {\r\n    margin: 0 1em;\r\n    text-align: right;\r\n  }\r\n  .total-score {\r\n    font-size: .8em;\r\n  }\r\n  .scores {\r\n    width: 25em;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background: #ffd08180;\r\n    padding: .25em 1em;\r\n    border-bottom-left-radius: 0.5em;\r\n    border-bottom-right-radius: 0.5em;\r\n  }\r\n  .score {\r\n    text-align: center;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import QualifierPlayer from '../components/molecules/QualifierPlayer.svelte';\r\n  import { me, players } from '../stores/core';\r\n  import {\r\n    regularMapRanking,\r\n    regularPlayerRanking,\r\n    myQualifier,\r\n    init,\r\n    initMyQualifier\r\n  } from '../stores/qualifierScores';\r\n\r\n  $: if (!$regularPlayerRanking && $players) init($players);\r\n  $: if (!$myQualifier && $regularPlayerRanking && $me) initMyQualifier($regularPlayerRanking, $me);\r\n</script>\r\n\r\n<div class=\"links\">\r\n  <a href=\"#/qualifiers!maps\">Rankings per map</a>\r\n  <a href=\"#/qualifiers!lobbies\">Qualifier lobbies</a>\r\n  <a href=\"#/qualifiers!elite\">Elite players</a>\r\n</div>\r\n{#if $myQualifier}\r\n<div class=\"my-qualifier\">\r\n  <h1>Your placement</h1>\r\n  <QualifierPlayer position={$myQualifier.position} player={$myQualifier} maps={$regularMapRanking} />\r\n</div>\r\n{/if}\r\n{#if !$regularPlayerRanking}\r\n  <p class=\"lobbies\">Loading qualifier scores...</p>\r\n{:else}\r\n  <div class=\"players\">\r\n  {#each $regularPlayerRanking as player, i (player.id)}\r\n    {#if i == 0}\r\n      <h1>Top seed</h1>\r\n    {:else if i == 32}\r\n      <h1>High seed</h1>\r\n    {:else if i == 64}\r\n      <h1>Low seed</h1>\r\n    {:else if i == 96}\r\n      <h1>Bottom seed</h1>\r\n    {:else if i == 128}\r\n      <h1>Not qualified</h1>\r\n    {/if}\r\n    <QualifierPlayer position={i+1} {player} maps={$regularMapRanking} />\r\n  {/each}\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .my-qualifier, .players {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .players :global(.scores) {\r\n    margin-bottom: .5em;\r\n  }\r\n  .links {\r\n    font-size: 1.25em;\r\n    display: flex;\r\n    width: 30em;\r\n    justify-content: space-between;\r\n    margin: auto;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import Map from '../components/molecules/Map.svelte';\r\n  import QualifierScore from '../components/molecules/QualifierScore.svelte';\r\n  import { me, players } from '../stores/core';\r\n  import {\r\n    eliteMapRanking,\r\n    elitePlayerRanking,\r\n    myQualifier,\r\n    init,\r\n    initMyQualifier\r\n  } from '../stores/qualifierScores';\r\n\r\n  let hiddenMaps = {};\r\n  const toggleHidden = map => {\r\n    hiddenMaps = {\r\n      ...hiddenMaps,\r\n      [map.id]: !hiddenMaps[map.id]\r\n    }\r\n  }\r\n\r\n  $: if (!$eliteMapRanking && $players) init($players);\r\n  $: if (!$myQualifier && $elitePlayerRanking && $me) initMyQualifier($elitePlayerRanking, $me);\r\n</script>\r\n\r\n<div class=\"links\">\r\n  <a href=\"#/qualifiers\">Player rankings</a>\r\n  <a href=\"#/qualifiers!lobbies\">Qualifier lobbies</a>\r\n  <a href=\"#/qualifiers!maps\">Regular players</a>\r\n</div>\r\n{#if !$eliteMapRanking}\r\n  <p class=\"lobbies\">Loading qualifier scores...</p>\r\n{:else}\r\n  <p class=\"maps\">\r\n  {#each $eliteMapRanking as map (map.id)}\r\n    <Map {map} />\r\n    {#if $myQualifier}\r\n      <div class=\"my-qualifier\">\r\n        <QualifierScore player={$myQualifier} score={$myQualifier.mapScores.get(map.id)[0]} />\r\n      </div>\r\n    {/if}\r\n    <a href=\"javascript:void(0)\" on:click={() => toggleHidden(map)}>\r\n      {hiddenMaps[map.id] ? 'Show' : 'Hide'} scores\r\n    </a>\r\n    {#if !hiddenMaps[map.id]}\r\n      {#each Array.from(map.players.values()) as player (player.id)}\r\n        <QualifierScore {player} score={player.mapScores.get(map.id)[0]} />\r\n      {/each}\r\n    {/if}\r\n  {/each}\r\n  </p>\r\n{/if}\r\n\r\n<style>\r\n  .maps {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 1em;\r\n  }\r\n  .maps :global(.map) {\r\n    margin: 1em 0;\r\n  }\r\n  .links {\r\n    font-size: 1.25em;\r\n    display: flex;\r\n    width: 30em;\r\n    justify-content: space-between;\r\n    margin: auto;\r\n  }\r\n  .my-qualifier {\r\n    font-size: 1.125em;\r\n    margin-bottom: .5em;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import QualifierPlayer from '../components/molecules/QualifierPlayer.svelte';\r\n  import { me, players } from '../stores/core';\r\n  import {\r\n    eliteMapRanking,\r\n    elitePlayerRanking,\r\n    myQualifier,\r\n    init,\r\n    initMyQualifier\r\n  } from '../stores/qualifierScores';\r\n\r\n  $: if (!$elitePlayerRanking && $players) init($players);\r\n  $: if (!$myQualifier && $elitePlayerRanking && $me) initMyQualifier($elitePlayerRanking, $me);\r\n</script>\r\n\r\n<div class=\"links\">\r\n  <a href=\"#/qualifiers!maps\">Rankings per map</a>\r\n  <a href=\"#/qualifiers!lobbies\">Qualifier lobbies</a>\r\n  <a href=\"#/qualifiers\">Regular players</a>\r\n</div>\r\n{#if $myQualifier}\r\n<div class=\"my-qualifier\">\r\n  <h1>Your placement</h1>\r\n  <QualifierPlayer position={$myQualifier.position} player={$myQualifier} maps={$eliteMapRanking} />\r\n</div>\r\n{/if}\r\n{#if !$elitePlayerRanking}\r\n  <p class=\"lobbies\">Loading qualifier scores...</p>\r\n{:else}\r\n  <div class=\"players\">\r\n    <h1>Elite players</h1>\r\n  {#each $elitePlayerRanking as player, i (player.id)}\r\n    <QualifierPlayer position={i+1} {player} maps={$eliteMapRanking} />\r\n  {/each}\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .my-qualifier, .players {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .players :global(.scores) {\r\n    margin-bottom: .5em;\r\n  }\r\n  .links {\r\n    font-size: 1.25em;\r\n    display: flex;\r\n    width: 30em;\r\n    justify-content: space-between;\r\n    margin: auto;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import { onMount } from 'svelte';\r\n  import Button from '../components/atoms/Button.svelte';\r\n  import QualifierPlayer from '../components/molecules/QualifierPlayer.svelte';\r\n  import { players } from '../stores/core';\r\n  import {\r\n    regularMapRanking,\r\n    regularPlayerRanking,\r\n    init\r\n  } from '../stores/qualifierScores';\r\n\r\n  let groups = new Array(32).fill(0).map(() => [{ id: '', username: '-' }, { id: '', username: '-' }, { id: '', username: '-' }, { id: '', username: '-' }]);\r\n  let selectedPlayers = new Set();\r\n  let spotlight;\r\n  let currentGroup = 0;\r\n\r\n  $: if (!$regularPlayerRanking && $players) init($players);\r\n  $: seeds = $regularPlayerRanking ? [\r\n    $regularPlayerRanking.slice(0, 32).filter(p => !selectedPlayers.has(p.id)),\r\n    $regularPlayerRanking.slice(32, 64).filter(p => !selectedPlayers.has(p.id)),\r\n    $regularPlayerRanking.slice(64, 96).filter(p => !selectedPlayers.has(p.id)),\r\n    $regularPlayerRanking.slice(96, 128).filter(p => !selectedPlayers.has(p.id)),\r\n  ] : [];\r\n\r\n  const roll = () => {\r\n    const seed = seeds.find(s => s.length);\r\n    const player = seed[Math.random() * seed.length >> 0];\r\n    spotlight = player;\r\n    selectedPlayers = new Set([...selectedPlayers, player.id]);\r\n    groups[currentGroup][groups[currentGroup].findIndex(x => x.username == '-')] = { id: player.id, username: player.username };\r\n    localStorage.setItem('groups', JSON.stringify(groups));\r\n    localStorage.setItem('selectedPlayers', JSON.stringify(Array.from(selectedPlayers.values())));\r\n    currentGroup = currentGroup == 31 ? 0 : currentGroup + 1;\r\n  }\r\n\r\n  const removePlayer = (i, j) => {\r\n    selectedPlayers.delete(groups[i][j].id);\r\n    selectedPlayers = new Set([...selectedPlayers]);\r\n    groups[i][j] = { id: '', username: '-' };\r\n    localStorage.setItem('groups', JSON.stringify(groups));\r\n    localStorage.setItem('selectedPlayers', JSON.stringify(Array.from(selectedPlayers.values())));\r\n  }\r\n\r\n  onMount(() => {\r\n    const storedGroups = localStorage.getItem('groups');\r\n    if (storedGroups) {\r\n      groups = JSON.parse(storedGroups);\r\n    }\r\n    const storedPlayers = localStorage.getItem('selectedPlayers');\r\n    if (storedPlayers) {\r\n      const players = JSON.parse(storedPlayers);\r\n      players.forEach(p => selectedPlayers.add(p));\r\n    }\r\n  });\r\n</script>\r\n\r\n<div class=\"groups\">\r\n  {#each groups as group, i}\r\n    <div class=\"group\" class:active={currentGroup == i}>\r\n      <h3 on:click={() => (currentGroup = i)}>Group {i+1}</h3>\r\n      {#each group as player, j}\r\n        <div class=\"player\" on:click={() => removePlayer(i,j)}>{player.username}</div>\r\n      {/each}\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<div class=\"spotlight\">\r\n  Current group: <b>Group {currentGroup+1}</b>\r\n  {#if spotlight}\r\n    <QualifierPlayer position={spotlight.position} player={spotlight} maps={$regularMapRanking} />\r\n  {/if}\r\n  <Button on:click={roll}>Roll</Button>\r\n</div>\r\n\r\n<div class=\"seeds\">\r\n  {#each seeds as seed, i}\r\n    <div class=\"seed\">\r\n      <h3>{['Top', 'High', 'Low', 'Bottom'][i]} seed</h3>\r\n      {#each seed as player (player.id)}\r\n        <img alt=\"\" src={player.avatar} />\r\n      {/each}\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<button on:click={() => { localStorage.clear() }}>panic</button>\r\n\r\n<style>\r\n  img {\r\n    width: 2em;\r\n    border-radius: 50%;\r\n    border: 2px solid #eee;\r\n    background: #fff;\r\n  }\r\n  .groups {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: center;\r\n  }\r\n  .seeds {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .group {\r\n    text-align: center;\r\n    margin: .5em;\r\n    width: 8em;\r\n    font-size: 0.8em;\r\n    white-space: nowrap;\r\n  }\r\n  .group.active {\r\n    transform: scale(1.25);\r\n  }\r\n  .seed {\r\n    text-align: center;\r\n    border: 2px solid #bf360c;\r\n    margin: 5em;\r\n    width: 20em;\r\n  }\r\n\r\n  .spotlight {\r\n    margin: auto;\r\n    width: 50em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n</style>","<script lang=\"ts\">\r\n  import Banner from './components/organisms/Banner.svelte';\r\n  import Nav from './components/organisms/Nav.svelte';\r\n  import Schedule from './components/organisms/Schedule.svelte';\r\n\r\n\timport Staff from './pages/Staff.svelte';\r\n\timport Players from './pages/Players.svelte';\r\n\timport Countries from './pages/Countries.svelte';\r\n\timport QualifierLobbies from './pages/QualifierLobbies.svelte';\r\n\timport QualifierMaps from './pages/QualifierMaps.svelte';\r\n\timport QualifierPlayers from './pages/QualifierPlayers.svelte';\r\n\timport EliteQualifierMaps from './pages/EliteQualifierMaps.svelte';\r\n\timport EliteQualifierPlayers from './pages/EliteQualifierPlayers.svelte';\r\n\timport ScuffedDrawing from './pages/ScuffedDrawing.svelte';\r\n\r\n\timport { page, stages } from './stores/core';\r\n\r\n</script>\r\n\r\n{#if $page == 'scuffed!drawing'}\r\n\t<ScuffedDrawing />\r\n{:else}\r\n<Banner />\r\n<div class=\"body\">\r\n\t<Nav />\r\n\t<Schedule stages={$stages} />\r\n\t<div class=\"page\">\r\n\t\t{#if $page == 'players'}\r\n\t\t\t<Players />\r\n\t\t{:else if $page == 'countries'}\r\n\t\t\t<Countries />\r\n\t\t{:else if $page == 'qualifiers'}\r\n\t\t\t<QualifierPlayers />\r\n\t\t{:else if $page == 'qualifiers!maps'}\r\n\t\t\t<QualifierMaps />\r\n\t\t{:else if $page == 'qualifiers!elite'}\r\n\t\t\t<EliteQualifierPlayers />\r\n\t\t{:else if $page == 'qualifiers!elite!maps'}\r\n\t\t\t<EliteQualifierMaps />\r\n\t\t{:else if $page == 'qualifiers!lobbies'}\r\n\t\t\t<QualifierLobbies />\r\n\t\t\t<Staff />\r\n\t\t{/if}\r\n\t</div>\r\n</div>\r\n{/if}\r\n\r\n<style>\r\n\t.body {\r\n\t\tmargin: 2em auto 4em;\r\n\t\tpadding: 1em 0;\r\n\t\tmax-width: 1024px;\r\n\t\tbackground: #ffaa7e;\r\n    border: 2px solid #eee;\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\t:global(nav) {\r\n\t\tmargin-top: -2.25em;\r\n\t\tmargin-bottom: 1em;\r\n\t}\r\n\t.page {\r\n\t\tpadding: 1em 0;\r\n\t}\r\n</style>","import App from './App.svelte';\r\nconst app = new App({ target: document.body });\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","destroy_block","lookup","key","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","customElement","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","API_URL","me","players","referees","commentators","streamers","stages","page","pages","onHashChange","hash","location","query","split","api","path","headers","fetch","Authorization","access_token","res","json","username","player","referee","commentator","streamer","__awaiter","thisArg","_arguments","P","generator","method","Content-Type","body","JSON","stringify","playersMap","id","refereesMap","ref","commentatorsMap","streamersMap","credentials","status","first_name","email","avatar","shouldChangeTimezone","timezone","Date","getTimezoneOffset","mePlayer","endsWith","String","meReferee","meCommentator","meStreamer","qualifier","offset","slot_ctx","href","link","date_start","date_end","slug","country","ranking","Number","pp","toFixed","selectCountry","available_referees","join","toUTCString","replace","toTimeString","artist","difficulty","category","charter","sr","bpm","od","hp","charter_id","cover","toLowerCase","match","includes","qualifierLobbies","qualifierMaps","async","qualifier_lobbies","maps","position","score","combo","c320","c300","c200","c100","c50","c0","regularMapRanking","regularPlayerRanking","eliteMapRanking","elitePlayerRanking","myQualifier","elite","rawPlayers","_a","_b","regularPlayers","elitePlayers","initMapPlayers","regularMapsMap","eliteMapsMap","initPlayerScores","totalScore","sumOfPositions","mapScores","regularPlayersMap","elitePlayersMap","qualifier_scores","mapPlayers","values","playerScore","previousPlayerScore","reduce","sum","sortPlayers","regularSortedPlayers","sort","eliteSortedPlayers","initMyQualifier","playerRanking","myQualifierIndex","findIndex","toggleHidden","currentGroup","removePlayer","j","localStorage"],"mappings":"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"}